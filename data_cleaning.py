'''
CS 121 Project
Name of document: data_cleaning.py

Purpose: Cleans crimes database by only considering the crimes that could 
potentially affect the user and those that have the necessary information to
be categorized (date and location)

'''

import geopandas as gpd
import pandas as pd
from datetime import datetime

crimes_w = ['DENUNCIA DE HECHOS POR ROBO DE CELULAR',\
'ROBO A TRANSEUNTE EN CINE CON VIOLENCIA', \
'ROBO EN INTERIOR DE EMPRESA (NOMINA) CON VIOLENCIA',\
'ROBO A SUCURSAL BANCARIA (SUPERMERCADO) CON VIOLENCIA',\
'ROBO A TRANSEUNTE EN TERMINAL DE PASAJEROS CON VIOLENCIA',\
'ROBO A SUCURSAL BANCARIA (SUPERMERCADO) SIN VIOLENCIA',\
'ROBO A TRANSEUNTE EN VIA PUBLICA (NOMINA) CON VIOLENCIA',\
'ROBO A OFICINA PÚBLICA CON VIOLENCIA',\
'ROBO A TRANSEUNTE EN HOTEL CON VIOLENCIA',\
'ROBO A NEGOCIO Y VEHICULO SIN VIOLENCIA',\
'ROBO A SUCURSAL BANCARIA (ASALTO BANCARIO) CON VIOLENCIA',\
'ROBO A NEGOCIO Y VEHICULO CON VIOLENCIA',\
'ROBO A TRANSEUNTE SALIENDO DEL CAJERO CON VIOLENCIA',\
'ROBO A TRANSEUNTE EN RESTAURANT CON VIOLENCIA',\
'SECUESTRO EXPRESS (PARA COMETER ROBO O EXTORSIÓN)',\
'ROBO A TRANSEUNTE EN PARQUES Y MERCADOS CON VIOLENCIA',\
'TENTATIVA DE ROBO','ROBO A TRANSEUNTE EN NEGOCIO CON VIOLENCIA',\
'ROBO A TRANSEUNTE SALIENDO DEL BANCO CON VIOLENCIA',\
'ROBO A TRANSEUNTE DE CELULAR CON VIOLENCIA',\
'ROBO A TRANSEUNTE DE CELULAR SIN VIOLENCIA',\
'ROBO A TRANSEUNTE EN VIA PUBLICA SIN VIOLENCIA',\
'ROBO A NEGOCIO CON VIOLENCIA','ROBO A NEGOCIO SIN VIOLENCIA'\
,'ROBO A TRANSEUNTE EN VIA PUBLICA CON VIOLENCIA','ROBO A REPARTIDOR CON VIOLENCIA']

crimes_pt=['ROBO A PASAJERO EN ECOBUS SIN VIOLENCIA',\
'ROBO A PASAJERO EN TREN SUBURBANO CON VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE PESERO Y VEHICULO CON VIOLENCIA',\
'ROBO A PASAJERO EN TREN LIGERO CON VIOLENCIA',\
'ROBO A PASAJERO EN RTP SIN VIOLENCIA',\
'ROBO A PASAJERO EN TREN SUBURBANO SIN VIOLENCIA',\
'ROBO A PASAJERO EN ECOBUS CON VIOLENCIA',\
'ROBO A PASAJERO EN TROLEBUS CON VIOLENCIA',\
'ROBO A PASAJERO EN TREN LIGERO SIN VIOLENCIA',\
'ROBO A PASAJERO EN TROLEBUS SIN VIOLENCIA',\
'ROBO A PASAJERO EN RTP CON VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE METROBUS CON VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE PESERO COLECTIVO SIN VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE TAXI SIN VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE TAXI CON VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE TRANSPORTE PÚBLICO SIN VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE METRO CON VIOLENCIA',\
'ROBO A PASAJERO / CONDUCTOR DE TAXI CON VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE PESERO COLECTIVO CON VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE METROBUS SIN VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE TRANSPORTE PÚBLICO CON VIOLENCIA',\
'ROBO A PASAJERO A BORDO DE METRO SIN VIOLENCIA']

crimes_v = ['LESIONES INTENCIONALES Y ROBO DE VEHICULO',\
'VIOLACION EQUIPARADA Y ROBO DE VEHICULO',\
'ROBO A TRANSEUNTE Y VEHICULO CON VIOLENCIA',\
'ROBO DE VEHICULO DE SERVICIO OFICIAL CON VIOLENCIA',\
'ROBO DE VEHICULO DE SERVICIO OFICIAL SIN VIOLENCIA',\
'PRIV. ILEGAL DE LA LIB. Y ROBO DE VEHICULO',\
'TENTATIVA DE ROBO DE VEHICULO',\
'ROBO DE VEHICULO DE SERVICIO PÚBLICO SIN VIOLENCIA',
'ROBO DE VEHICULO DE SERVICIO PÚBLICO CON VIOLENCIA',\
'DAÑO EN PROPIEDAD AJENA INTENCIONAL A AUTOMOVIL',\
'ROBO DE VEHICULO DE SERVICIO PARTICULAR CON VIOLENCIA',\
'ROBO A PASAJERO / CONDUCTOR DE VEHICULO CON VIOLENCIA',\
'ROBO DE VEHICULO DE SERVICIO PARTICULAR SIN VIOLENCIA',\
'ROBO DE OBJETOS DEL INTERIOR DE UN VEHICULO','ROBO DE ACCESORIOS DE AUTO'
'ROBO A REPARTIDOR Y VEHICULO SIN VIOLENCIA','ROBO A REPARTIDOR Y VEHICULO CON VIOLENCIA']

homicides = ['HOMICIDIO CULPOSO POR INSTRUMENTO PUNZO CORTANTE',\
'HOMICIDIO CULPOSO POR ARMA DE FUEGO','HOMICIDIO CULPOSO',\
'PLAGIO O SECUESTRO','TENTATIVA DE HOMICIDIO',\
'HOMICIDIOS INTENCIONALES (OTROS)','HOMICIDIO POR GOLPES',\
'HOMICIDIO POR ARMA DE FUEGO','HOMICIDIO POR AHORCAMIENTO'\
'FEMINICIDIO','HOMICIDIO POR ARMA BLANCA',\
'LESIONES INTENCIONALES POR ARMA DE FUEGO']

rape = ['VIOLACION TUMULTUARIA','VIOLACION','VIOLACION TUMULTUARIA EQUIPARADA'\
'TENTATIVA DE VIOLACION','VIOLACION EQUIPARADA']


def clean_crimes_data(geopandas_dataframe):

    crimes = geopandas_dataframe
    crimes['tipo']='NaN' 

    for i in range(len(crimes)): 
        if crimes['delito'][i] in crimes_w: 
            crimes.at[i,'tipo']='walking' 
        elif crimes['delito'][i] in crimes_pt: 
            crimes.at[i,'tipo']='public transport'
        elif crimes['delito'][i] in crimes_v: 
            crimes.at[i,'tipo']='personal vehicle'
        elif crimes['delito'][i] in homicides:
            crimes.at[i,'tipo']='homicide'
        elif crimes['delito'][i] in rape:
            crimes.at[i,'tipo']='rape'


    crimes.drop(crimes[crimes.tipo == 'NaN'].index, inplace = True)
    crimes.dropna(subset=["geometry"], inplace=True)
    crimes.dropna()

    aux = crimes['fecha_hechos'].str.split(" ", n = 1, expand = True) 
    crimes['date']= aux[0] 
    crimes['time']= aux[1]
    crimes['hour']= crimes['time'].str.split(":", n = 1, expand = True)[0]
    crimes['hour'] = pd.to_numeric(crimes["hour"]) 
    crimes['date']= pd.to_datetime(crimes['date'])
    crimes['weekday'] = pd.to_datetime(crimes['date']).apply(lambda x: datetime.strftime(x, '%A'))
    crimes.drop(columns=['fecha_hechos','categoria_delito'], inplace = True)
    crimes['date'] = crimes['date'].astype('str')
